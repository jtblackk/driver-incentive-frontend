[{"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/index.js":"1","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/App.js":"2","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/reportWebVitals.js":"3","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/AdminHomePage.js":"4","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/SponsorHomePage.js":"5","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/PageNotFoundPage.js":"6","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/SignupPage.js":"7","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/DriverHomePage.js":"8","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/IndexPage.js":"9","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/TopAppBar.js":"10","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/CreateAccountCard.js":"11","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/AdminUserModPage.js":"12","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/with_List_Loading.js":"13","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/User_List.js":"14"},{"size":500,"mtime":1612211793695,"results":"15","hashOfConfig":"16"},{"size":1033,"mtime":1612905190661,"results":"17","hashOfConfig":"16"},{"size":362,"mtime":1612211793696,"results":"18","hashOfConfig":"16"},{"size":870,"mtime":1612902624913,"results":"19","hashOfConfig":"16"},{"size":304,"mtime":1612211793696,"results":"20","hashOfConfig":"16"},{"size":253,"mtime":1612211793696,"results":"21","hashOfConfig":"16"},{"size":421,"mtime":1612211793696,"results":"22","hashOfConfig":"16"},{"size":301,"mtime":1612306008006,"results":"23","hashOfConfig":"16"},{"size":233,"mtime":1612309527990,"results":"24","hashOfConfig":"16"},{"size":565,"mtime":1612211793694,"results":"25","hashOfConfig":"16"},{"size":6170,"mtime":1612211793695,"results":"26","hashOfConfig":"16"},{"size":4409,"mtime":1612927679478,"results":"27","hashOfConfig":"16"},{"size":367,"mtime":1612907213843,"results":"28","hashOfConfig":"16"},{"size":12825,"mtime":1612940152646,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"vi2dzt",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/index.js",[],["62","63"],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/App.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/reportWebVitals.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/AdminHomePage.js",["64","65","66","67"],"import Grid from '@material-ui/core/Grid'\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport { useState } from 'react'\nimport { useHistory } from 'react-router-dom'\nimport AdminUserModPage from '../Components/AdminUserModPage';\n\n\n\n\nfunction AdminHomePage() {\n  let history = useHistory();\n\n  return (\n    <Grid container justify=\"space-evenly\">\n      <Grid item>\n        <p>Welcome to the admin's home page Thomas</p>\n        <p> there's nothing here, yet :)</p>\n         \n        <div>\n        \n          {/* <Button id=\"butt\" variant=\"contained\" color=\"primary\" onClick={() => history.push('/adminMod')}> */}\n            <AdminUserModPage></AdminUserModPage>\n          {/* </Button> */}\n       \n        </div>\n          \n      </Grid>\n    </Grid>\n  )\n}\n\nexport default AdminHomePage\n","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/SponsorHomePage.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/PageNotFoundPage.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/SignupPage.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/DriverHomePage.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/pages/IndexPage.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/TopAppBar.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/CreateAccountCard.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/AdminUserModPage.js",["68","69","70","71"],"import Grid from '@material-ui/core/Grid'\nimport { data } from 'browserslist'\nimport { useState } from 'react'\nimport Button from '@material-ui/core/Button';\nimport { ListItem } from '@material-ui/core';\nimport React, { useEffect } from 'react';\nimport '../App.css';\nimport addEntryData from './User_List'\nimport withListLoading from './with_List_Loading'\n\nfunction AdminUserModPage() {\n\n  const ListLoading = withListLoading(addEntryData);\n  const [appState, setAppState] = useState({\n    loading: false,\n    repos: null,\n  });\n\n  useEffect(() => {\n    setAppState({ loading: true });\n    const apiUrl = 'https://wn0wfce7a3.execute-api.us-east-1.amazonaws.com/dev/entries'\n    fetch(apiUrl)\n      .then((res) => res.json())\n      .then((repos) => {\n        console.log(repos)\n        // addEntryData(repos)\n        setAppState({ loading: false, repos: repos });\n      });\n  }, [setAppState]);\n\n  return (\n    <div className='App'>\n    <div className='container'>\n      <h1>User Tables</h1>\n    </div>\n    <div className='repo-container'>\n      <ListLoading isLoading={appState.loading} repos={appState.repos} />\n    </div>\n    \n  </div>\n  );\n\n  // let userDetailObj = {\n  //   Email_ID: '',\n  //   FirstName: '',\n  //   LastName: '',\n  //   AccountType: '',\n  //   TotalPoints: '',\n  // }\n  // const [userDetails, setUserDetails] = useState(userDetailObj)\n\n  // let GET_USERDATA_URL = //'https://cors-anywhere.herokuapp.com/https://wn0wfce7a3.execute-api.us-east-1.amazonaws.com/dev/entries'\n  // 'https://wn0wfce7a3.execute-api.us-east-1.amazonaws.com/dev/entries'\n  // // 'https://wn0wfce7a3.execute-api.us-east-1.amazonaws.com/dev/DynamoDB_read'\n  // // fetch(GET_USERDATA_URL)\n  // var x =[[]];\n  // var i;\n  // const myList = document.querySelector('ul');\n  // fetch(GET_USERDATA_URL)\n  // .then((response) => response.json())\n  // .then((data) => {\n  //   // for (const user of data.Items) {\n  //   //   let listItem = document.createElement('li');\n  //   //   listItem.appendChild(\n  //   //     document.createElement('strong')\n  //   //   ).textContent = product.Name;\n  //   //   listItem.append(\n  //   //     ` can be found in ${\n  //   //       product.Location\n  //   //     }. Cost: `\n  //   //   );\n  //   //   listItem.appendChild(\n  //   //     document.createElement('strong')\n  //   //   ).textContent = `Â£${product.Price}`;\n  //   //   myList.appendChild(listItem);\n  //   // }\n  //   // console.log(data)\n  //   // console.log(data.Items.length)\n  //   // console.log(x[0][0])\n  //   // console.log(data.Items[0])\n  //   // verify that account was successfully created\n  //     })\n                \n\n  // return (\n  //   <div>\n  //   <Grid container justify=\"space-evenly\">\n      \n  //     <Grid item>\n  //       <p id=\"demo\">404: page doesn't exist :(</p>\n\n\n  //       <Button\n  //         variant=\"outlined\"\n  //         onClick={() => {\n  //             let GET_USERDATA_URL = //'https://cors-anywhere.herokuapp.com/https://wn0wfce7a3.execute-api.us-east-1.amazonaws.com/dev/entries'\n  //             'https://wn0wfce7a3.execute-api.us-east-1.amazonaws.com/dev/entries'\n  //             // 'https://wn0wfce7a3.execute-api.us-east-1.amazonaws.com/dev/DynamoDB_read'\n  //             // fetch(GET_USERDATA_URL)\n  //             var x =[[]];\n  //             var i;\n  //             fetch(GET_USERDATA_URL)\n  //             .then((response) => response.json())\n  //             .then((data) => {\n  //               // for (i in data.Items) {\n  //               //   x.push(data.Items[i])\n  //               // }\n  //               console.log(data)\n  //               console.log(data.length)\n  //               console.log(data[6])\n  //               // console.log(data.Items[6].AccountType)\n  //               // console.log(data.Items[6].Email_id)\n  //               // console.log(data.Items[6].FirstName)\n  //               // console.log(data.Items[6].LastName)\n  //               // if (!data.Items[5].TotalPoints)\n  //               // {\n  //               //   console.log(0)\n\n  //               // }else{\n  //               //   console.log(data.Items[5].TotalPoints)\n  //               // }\n\n  //               // verify that account was successfully created\n  //                 })\n  //               }\n  //             }\n  //             >\n  //           test\n  //         </Button>\n  //     </Grid>\n  //   </Grid>\n\n  //   </div>\n  // )\n}\n\nexport default AdminUserModPage\n","/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/with_List_Loading.js",[],"/Users/ThomasGriff/Documents/Senior_Spring/CPSC4910/project_git/Local_Repo/Master/src/Components/User_List.js",["72"],"import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport Switch from \"@material-ui/core/Switch\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport FilterListIcon from \"@material-ui/icons/FilterList\";\n\nfunction createData(Email_id, AccountType, FirstName, LastName, TotalPoints) {\n  return { Email_id, AccountType, FirstName, LastName, TotalPoints };\n}\n\nconst rows = [\n  // createData('Frozen yoghurt', '159', '6.0', '24', 4.0),\n  // createData('Ice cream sandwich', 237, 9.0, 37, 4.3),\n  // createData('Eclair', 262, 16.0, 24, 6.0),\n  // createData('Cupcake', 305, 3.7, 67, 4.3),\n  // createData('Gingerbread', 356, 16.0, 49, 3.9),\n];\n\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"Email_id\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Email\"\n  },\n  { id: \"AccountType\", numeric: false, disablePadding: true, label: \"Account Type\" },\n  { id: \"FirstName\", numeric: false, disablePadding: true, label: \"First Name\" },\n  { id: \"LastName\", numeric: false, disablePadding: true, label: \"Last Name\" },\n  { id: \"TotalPoints\", numeric: true, disablePadding: false, label: \"Total Points\" }\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all Users\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1)\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85)\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark\n        },\n  title: {\n    flex: \"1 1 100%\"\n  }\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected } = props;\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Nutrition\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <Tooltip title=\"Filter list\">\n          <IconButton aria-label=\"filter list\">\n            <FilterListIcon />\n          </IconButton>\n        </Tooltip>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    width: \"100%\"\n  },\n  paper: {\n    width: \"100%\",\n    marginBottom: theme.spacing(2)\n  },\n  table: {\n    minWidth: 750\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1\n  }\n}));\n\n\n\n\n\n\nconstÂ ListÂ =Â (props)Â =>Â {\n\n  \n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"AccountType\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [dense, setDense] = React.useState(false);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.Email_id);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, Email_id) => {\n    const selectedIndex = selected.indexOf(Email_id);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, Email_id);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const handleChangeDense = (event) => {\n    setDense(event.target.checked);\n  };\n\n  const isSelected = (Email_id) => selected.indexOf(Email_id) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n\n  constÂ {Â reposÂ }Â =Â props;\n  \nÂ Â ifÂ (!reposÂ ||Â repos.lengthÂ ===Â 0)Â returnÂ <p>NoÂ repos,Â sorry</p>;\n  var data=[];\n  var x = 0;\n  for (x in repos){\n    data.push(repos[x])\n    if (!rows.includes(repos[x])){\n      rows.push(repos[x])\n    }\n  }\n  // console.log(rows[5])\n\n\n  return (\n\n    <div className={classes.root}>\n    <Paper className={classes.paper}>\n      <EnhancedTableToolbar numSelected={selected.length} />\n      <TableContainer>\n        <Table\n          className={classes.table}\n          aria-labelledby=\"tableTitle\"\n          size={dense ? \"small\" : \"medium\"}\n          aria-label=\"enhanced table\"\n        >\n          <EnhancedTableHead\n            classes={classes}\n            numSelected={selected.length}\n            order={order}\n            orderBy={orderBy}\n            onSelectAllClick={handleSelectAllClick}\n            onRequestSort={handleRequestSort}\n            rowCount={rows.length}\n          />\n          <TableBody>\n            {stableSort(rows, getComparator(order, orderBy))\n              .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n              .map((row, index) => {\n                const isItemSelected = isSelected(row.Email_id);\n                const labelId = `enhanced-table-checkbox-${index}`;\n\n                return (\n                  <TableRow\n                    hover\n                    onClick={(event) => handleClick(event, row.Email_id)}\n                    role=\"checkbox\"\n                    aria-checked={isItemSelected}\n                    tabIndex={-1}\n                    key={row.Email_id}\n                    selected={isItemSelected}\n                  >\n                    <TableCell padding=\"checkbox\">\n                      <Checkbox\n                        checked={isItemSelected}\n                        inputProps={{ \"aria-labelledby\": labelId }}\n                      />\n                    </TableCell>\n                    <TableCell\n                      component=\"th\"\n                      id={labelId}\n                      scope=\"row\"\n                      padding=\"none\"\n                    >\n                      {row.Email_id}\n                    </TableCell>\n                    <TableCell align=\"right\">{row.AccountType}</TableCell>\n                    <TableCell align=\"right\">{row.FirstName}</TableCell>\n                    <TableCell align=\"right\">{row.LastName}</TableCell>\n                    <TableCell align=\"right\">{row.TotalPoints}</TableCell>\n                  </TableRow>\n                );\n              })}\n            {emptyRows > 0 && (\n              <TableRow style={{ height: (dense ? 33 : 53) * emptyRows }}>\n                <TableCell colSpan={6} />\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </TableContainer>\n      <TablePagination\n        rowsPerPageOptions={[5, 10, 25]}\n        component=\"div\"\n        count={rows.length}\n        rowsPerPage={rowsPerPage}\n        page={page}\n        onChangePage={handleChangePage}\n        onChangeRowsPerPage={handleChangeRowsPerPage}\n      />\n    </Paper>\n    <FormControlLabel\n      control={<Switch checked={dense} onChange={handleChangeDense} />}\n      label=\"Dense padding\"\n    />\n  </div>\n);\n\n// Â Â constÂ {Â reposÂ }Â =Â props;\n// Â Â ifÂ (!reposÂ ||Â repos.lengthÂ ===Â 0)Â returnÂ <p>NoÂ repos,Â sorry</p>;\n\n\nÂ Â Â Â //Â <ul>\nÂ Â Â Â //Â Â Â <h2Â className='list-head'>AvailableÂ PublicÂ Repositories</h2>\nÂ Â Â Â //Â Â Â {repos.map((repo)Â =>Â {\nÂ Â Â Â //Â Â Â Â Â ifÂ (!repo.TotalPoints)\nÂ Â Â Â //Â Â Â Â Â {\nÂ Â Â Â //Â Â Â Â Â Â Â console.log(0)\n\nÂ Â Â Â //Â Â Â Â Â }else{\nÂ Â Â Â //Â Â Â Â Â Â Â console.log(repo.TotalPoints)\nÂ Â Â Â //Â Â Â Â Â }\nÂ Â Â Â //Â Â Â Â Â console.log(repo.Email_idÂ +Â \"Â \"Â +Â repo.FirstNameÂ +Â \"Â \"Â +Â repo.LastName+Â \"Â \"Â +repo.AccountType+Â \"Â \"Â +repo.ApplicationType+Â \"Â \"Â +repo.TotalPoints)\nÂ Â Â Â //Â Â Â Â Â returnÂ (\nÂ Â Â Â Â Â Â Â Â Â \nÂ Â Â Â //Â Â Â Â Â Â Â <liÂ key={repo.Email_id}Â className='list'>\nÂ Â Â Â //Â Â Â Â Â Â Â Â Â {/*Â <spanÂ className='repo-text'>{repo.Email_id}Â </span>Â */}\nÂ Â Â Â //Â Â Â Â Â Â Â Â Â <spanÂ className='repo-description'>{repo.Email_idÂ +Â \"Â \"Â +Â repo.FirstNameÂ +Â \"Â \"Â +Â repo.LastName+Â \"Â \"Â +repo.AccountType+Â \"Â \"Â +repo.ApplicationType+Â \"Â \"Â +repo.TotalPoints}</span>\nÂ Â Â Â //Â Â Â Â Â Â Â </li>\nÂ Â Â Â //Â Â Â Â Â );\nÂ Â Â Â //Â Â Â }\nÂ Â Â Â //Â Â Â )}\nÂ Â Â Â //Â </ul>\nÂ Â //Â );\n};\nexportÂ defaultÂ List;\n\n",{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":3,"column":10,"nodeType":"79","messageId":"80","endLine":3,"endColumn":20},{"ruleId":"77","severity":1,"message":"81","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"82","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":18},{"ruleId":"77","severity":1,"message":"83","line":13,"column":7,"nodeType":"79","messageId":"80","endLine":13,"endColumn":14},{"ruleId":"77","severity":1,"message":"84","line":1,"column":8,"nodeType":"79","messageId":"80","endLine":1,"endColumn":12},{"ruleId":"77","severity":1,"message":"85","line":2,"column":10,"nodeType":"79","messageId":"80","endLine":2,"endColumn":14},{"ruleId":"77","severity":1,"message":"81","line":4,"column":8,"nodeType":"79","messageId":"80","endLine":4,"endColumn":14},{"ruleId":"77","severity":1,"message":"86","line":5,"column":10,"nodeType":"79","messageId":"80","endLine":5,"endColumn":18},{"ruleId":"77","severity":1,"message":"87","line":24,"column":10,"nodeType":"79","messageId":"80","endLine":24,"endColumn":20},"no-native-reassign",["88"],"no-negated-in-lhs",["89"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'Button' is defined but never used.","'useState' is defined but never used.","'history' is assigned a value but never used.","'Grid' is defined but never used.","'data' is defined but never used.","'ListItem' is defined but never used.","'createData' is defined but never used.","no-global-assign","no-unsafe-negation"]