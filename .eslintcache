[{"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\index.js":"1","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\App.js":"2","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\reportWebVitals.js":"3","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\aws-exports.js":"4","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\PageNotFoundPage.js":"5","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\AccountSetupPage.js":"6","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ProfilePage.js":"7","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ApplicationPage.js":"8","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\IndexPage.js":"9","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ApplicantManagementPage.js":"10","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ProductCatalogManagementPage.js":"11","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ProductCatalogBrowsingPage.js":"12","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\DriverManagementPage.js":"13","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\OrganizationSetupPage.js":"14","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\OrganizationPage.js":"15","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\AuditLogPage.js":"16","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\OrderReviewPage.js":"17","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ViewSponsorsPage.js":"18","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\CommonFunctions.js":"19","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\UserContext.js":"20","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\LoadingIcon.js":"21","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\TopAppBar.js":"22","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\LeftDrawer.js":"23","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\Constants.js":"24","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\UserProfileCard.js":"25","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AccountSetupCard.js":"26","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ProfileSelectionDialog.js":"27","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\EditAccountCard.js":"28","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DriverApplicationCard.js":"29","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ApplicationManagementDialog.js":"30","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AddCatalogItemDialog.js":"31","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\CatalogItemDialog.js":"32","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ChooseCatalogItemsPanel.js":"33","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ChooseCatalogSponsorDialog.js":"34","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\CartDialog.js":"35","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\GenericTable.js":"36","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DeleteCatalogItemDialog.js":"37","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ViewSponsorAsDriverDialog.js":"38","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\OrganizationContent.js":"39","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\SuperSponsorOrganizationContent.js":"40","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\OrganizationSetupCard.js":"41","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\SetAllPointRatiosDialog.js":"42","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DriverManagementDialog.js":"43","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\GenericTableSelectableSpecial.js":"44","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\GenericTableSelectable.js":"45","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\OrganizationSponsorManagementPanel.js":"46","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DeleteSponsorshipDialog.js":"47","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ViewSponsorProfileDialog.js":"48","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AddSponsorProfileDialog.js":"49","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ApplyAgainDialog.js":"50","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\UserManagementPage.js":"51","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\UserProfileDialog.js":"52","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\EditUserDialog.js":"53","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AddUserDialog\\AddUserDialog.js":"54","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\SponsorshipManagementPage.js":"55","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\SponsorshipManagementView.js":"56","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\CreateNewSponsorshipCard.js":"57","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\SponsorInvoicePage.js":"58","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\InvoicePages\\SponsorInvoiceView.js":"59","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\InvoicePages\\OrganizationInvoiceView.js":"60","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\api_endpoints.js":"61","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\InvoicePages\\OrganizationInvoiceContent.js":"62","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\AdminInvoicePage.js":"63"},{"size":517,"mtime":1617990258782,"results":"64","hashOfConfig":"65"},{"size":4538,"mtime":1618516302116,"results":"66","hashOfConfig":"65"},{"size":375,"mtime":1617990258797,"results":"67","hashOfConfig":"65"},{"size":588,"mtime":1618365711016,"results":"68","hashOfConfig":"65"},{"size":1156,"mtime":1617999702959,"results":"69","hashOfConfig":"65"},{"size":1934,"mtime":1618107138477,"results":"70","hashOfConfig":"65"},{"size":6672,"mtime":1618516302158,"results":"71","hashOfConfig":"65"},{"size":1851,"mtime":1617999734335,"results":"72","hashOfConfig":"65"},{"size":3564,"mtime":1618577899660,"results":"73","hashOfConfig":"65"},{"size":10404,"mtime":1618528670042,"results":"74","hashOfConfig":"65"},{"size":9633,"mtime":1618516302157,"results":"75","hashOfConfig":"65"},{"size":15953,"mtime":1618516302156,"results":"76","hashOfConfig":"65"},{"size":13286,"mtime":1618528670254,"results":"77","hashOfConfig":"65"},{"size":1622,"mtime":1617999706506,"results":"78","hashOfConfig":"65"},{"size":5692,"mtime":1618516302155,"results":"79","hashOfConfig":"65"},{"size":1139,"mtime":1618000226162,"results":"80","hashOfConfig":"65"},{"size":9641,"mtime":1618516302154,"results":"81","hashOfConfig":"65"},{"size":10407,"mtime":1618516302162,"results":"82","hashOfConfig":"65"},{"size":1323,"mtime":1618787687078,"results":"83","hashOfConfig":"65"},{"size":89,"mtime":1617990258779,"results":"84","hashOfConfig":"65"},{"size":322,"mtime":1618000223989,"results":"85","hashOfConfig":"65"},{"size":1876,"mtime":1618516302141,"results":"86","hashOfConfig":"65"},{"size":6371,"mtime":1618516302135,"results":"87","hashOfConfig":"65"},{"size":40,"mtime":1617990258778,"results":"88","hashOfConfig":"65"},{"size":1776,"mtime":1617999833352,"results":"89","hashOfConfig":"65"},{"size":7002,"mtime":1618528668987,"results":"90","hashOfConfig":"65"},{"size":4143,"mtime":1618516302138,"results":"91","hashOfConfig":"65"},{"size":3121,"mtime":1618516302129,"results":"92","hashOfConfig":"65"},{"size":6499,"mtime":1618786456663,"results":"93","hashOfConfig":"65"},{"size":10302,"mtime":1618516302122,"results":"94","hashOfConfig":"65"},{"size":6320,"mtime":1618516302118,"results":"95","hashOfConfig":"65"},{"size":3848,"mtime":1618016674894,"results":"96","hashOfConfig":"65"},{"size":3567,"mtime":1617999935810,"results":"97","hashOfConfig":"65"},{"size":4620,"mtime":1618516302124,"results":"98","hashOfConfig":"65"},{"size":11409,"mtime":1618528669224,"results":"99","hashOfConfig":"65"},{"size":4444,"mtime":1618516302131,"results":"100","hashOfConfig":"65"},{"size":2847,"mtime":1618516302126,"results":"101","hashOfConfig":"65"},{"size":10422,"mtime":1618516302143,"results":"102","hashOfConfig":"65"},{"size":3825,"mtime":1617999882189,"results":"103","hashOfConfig":"65"},{"size":4037,"mtime":1618789260733,"results":"104","hashOfConfig":"65"},{"size":3654,"mtime":1618787850858,"results":"105","hashOfConfig":"65"},{"size":4301,"mtime":1618516302138,"results":"106","hashOfConfig":"65"},{"size":31636,"mtime":1618528669669,"results":"107","hashOfConfig":"65"},{"size":6396,"mtime":1617999897822,"results":"108","hashOfConfig":"65"},{"size":6117,"mtime":1618000223808,"results":"109","hashOfConfig":"65"},{"size":10777,"mtime":1618516302137,"results":"110","hashOfConfig":"65"},{"size":3174,"mtime":1618516302127,"results":"111","hashOfConfig":"65"},{"size":7774,"mtime":1618516302144,"results":"112","hashOfConfig":"65"},{"size":7547,"mtime":1618516302119,"results":"113","hashOfConfig":"65"},{"size":1733,"mtime":1618789239322,"results":"114","hashOfConfig":"65"},{"size":15723,"mtime":1618516302161,"results":"115","hashOfConfig":"65"},{"size":5904,"mtime":1618516302142,"results":"116","hashOfConfig":"65"},{"size":6656,"mtime":1618516302130,"results":"117","hashOfConfig":"65"},{"size":21310,"mtime":1618516302120,"results":"118","hashOfConfig":"65"},{"size":6870,"mtime":1618516302159,"results":"119","hashOfConfig":"65"},{"size":12138,"mtime":1618516302140,"results":"120","hashOfConfig":"65"},{"size":5067,"mtime":1618516302125,"results":"121","hashOfConfig":"65"},{"size":3049,"mtime":1618516302158,"results":"122","hashOfConfig":"65"},{"size":5101,"mtime":1618516302134,"results":"123","hashOfConfig":"65"},{"size":5353,"mtime":1618516302133,"results":"124","hashOfConfig":"65"},{"size":4116,"mtime":1618704376106,"results":"125","hashOfConfig":"65"},{"size":2989,"mtime":1618517834442,"results":"126","hashOfConfig":"65"},{"size":5541,"mtime":1618577164685,"results":"127","hashOfConfig":"65"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"1re6p0e",{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"149","messages":"150","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"157","messages":"158","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"199","messages":"200","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"201","messages":"202","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"205","messages":"206","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"213","messages":"214","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"215","messages":"216","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"219","messages":"220","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"221","messages":"222","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"223","messages":"224","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"225","messages":"226","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"227","messages":"228","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"229","messages":"230","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"231","messages":"232","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"233","messages":"234","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"235","messages":"236","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"237","messages":"238","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"239","messages":"240","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"241","messages":"242","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"243","usedDeprecatedRules":"130"},{"filePath":"244","messages":"245","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"246","messages":"247","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"248","usedDeprecatedRules":"130"},{"filePath":"249","messages":"250","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"251","usedDeprecatedRules":"130"},{"filePath":"252","messages":"253","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},{"filePath":"254","messages":"255","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"256","usedDeprecatedRules":"130"},{"filePath":"257","messages":"258","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"130"},"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\index.js",[],["259","260"],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\App.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\reportWebVitals.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\aws-exports.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\PageNotFoundPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\AccountSetupPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ProfilePage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ApplicationPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\IndexPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ApplicantManagementPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ProductCatalogManagementPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ProductCatalogBrowsingPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\DriverManagementPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\OrganizationSetupPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\OrganizationPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\AuditLogPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\OrderReviewPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\ViewSponsorsPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\CommonFunctions.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\UserContext.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\LoadingIcon.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\TopAppBar.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\LeftDrawer.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\Constants.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\UserProfileCard.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AccountSetupCard.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ProfileSelectionDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\EditAccountCard.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DriverApplicationCard.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ApplicationManagementDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AddCatalogItemDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\CatalogItemDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ChooseCatalogItemsPanel.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ChooseCatalogSponsorDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\CartDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\GenericTable.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DeleteCatalogItemDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ViewSponsorAsDriverDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\OrganizationContent.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\SuperSponsorOrganizationContent.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\OrganizationSetupCard.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\SetAllPointRatiosDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DriverManagementDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\GenericTableSelectableSpecial.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\GenericTableSelectable.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\OrganizationSponsorManagementPanel.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\DeleteSponsorshipDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ViewSponsorProfileDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AddSponsorProfileDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\ApplyAgainDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\UserManagementPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\UserProfileDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\EditUserDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\AddUserDialog\\AddUserDialog.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\SponsorshipManagementPage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\SponsorshipManagementView.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\CreateNewSponsorshipCard.js",["261"],"import {\r\n  Button,\r\n  Grid,\r\n  InputLabel,\r\n  MenuItem,\r\n  Paper,\r\n  Select,\r\n  Typography,\r\n} from '@material-ui/core'\r\nimport React, { useEffect, useState } from 'react'\r\nimport _ from 'lodash'\r\nimport apis from '../Helpers/api_endpoints'\r\n\r\nconst CreateNewSponsorshipCard = (props) => {\r\n  const [isLoading, setIsLoading] = useState(false)\r\n\r\n  // const [currentSponsorships, setCurrentSponsorships] = useState(null)\r\n  const [validDriverChoices, setValidDriverChoices] = useState(null)\r\n  const [selectedDriver, setSelectedDriver] = useState(null)\r\n\r\n  // i'll spit out\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      // start loading animation\r\n      setIsLoading(true)\r\n\r\n      // get all of the active sponsor's drivers\r\n\r\n      let sponsorships_response = await fetch(\r\n        apis.GetDriverDataBySponsor + props.SponsorID,\r\n      )\r\n      let sponsorships_json = await sponsorships_response.json()\r\n      let sponsorships_array = JSON.parse(sponsorships_json.body).map(\r\n        (element) => {\r\n          return element.Username.S\r\n        },\r\n      )\r\n\r\n      // get all drivers, filter out any invalid entries (anyone not e adriver, inactive accounts, pre-existing sponsorships)\r\n\r\n      let userdata_response = await fetch(apis.GetAllUserData)\r\n      let userdata_json = await userdata_response.json()\r\n      let userdata_array = userdata_json.body.Items\r\n\r\n      let mock_data = userdata_array\r\n      let user_data_formatted = mock_data\r\n        .map((element) => {\r\n          return {\r\n            Username: element.Username.S,\r\n            AccountStatus: parseInt(element.AccountStatus.N),\r\n            Bio: element.Bio.S,\r\n            Organization: element.Organization ? element.Organization.S : null,\r\n            SignupDate: element.SignupDate.S,\r\n            FirstName: element.FirstName.S,\r\n            AccountType: element.AccountType.S,\r\n            LastName: element.LastName.S,\r\n            LastSignIn: element.LastSignIn ? element.LastSignIn.S : null,\r\n          }\r\n        })\r\n        .filter(\r\n          (element) =>\r\n            element.AccountStatus === 1 &&\r\n            element.AccountType === 'Driver' &&\r\n            !sponsorships_array.find(\r\n              (spons_element) => spons_element === element.Username,\r\n            ),\r\n        )\r\n      setValidDriverChoices(user_data_formatted)\r\n    })().then(() => {\r\n      setIsLoading(false)\r\n    })\r\n  }, [props.SponsorID, props.updatePage.updateCount])\r\n\r\n  return (\r\n    <Grid item container component={Paper} style={{ padding: 20 }}>\r\n      <Grid item xs={12}>\r\n        <Typography variant=\"h6\">Add new drivers</Typography>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        {/* <p>hello</p> */}\r\n        Add new drivers to the sponsor.\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <br />\r\n      </Grid>\r\n      <Grid\r\n        item\r\n        container\r\n        xs={12}\r\n        spacing={2}\r\n        // justify=\"flex-\"\r\n        alignItems=\"center\"\r\n      >\r\n        <Grid item xs={6}>\r\n          <InputLabel id=\"AccountTypeLabel\">Driver</InputLabel>\r\n          <Select\r\n            labelId=\"AccountTypeLabel\"\r\n            id=\"AccountType\"\r\n            fullWidth\r\n            variant=\"filled\"\r\n            // error={accTypeHelperText}\r\n            // helperText={accTypeHelperText}\r\n            onChange={(event) => {\r\n              // setAccTypeHelperText(null)\r\n              // update account type in state\r\n              // let newUserDetails = selectedDriver\r\n              // newUserDetails.AccountType = event.target.value\r\n              setSelectedDriver(event.target.value)\r\n            }}\r\n          >\r\n            {validDriverChoices\r\n              ? _.sortBy(validDriverChoices, ['Username', 'Name'], ['asc']).map(\r\n                  (element) => {\r\n                    return (\r\n                      <MenuItem value={element.Username}>\r\n                        {element.Username}: {element.FirstName}{' '}\r\n                        {element.LastName}\r\n                      </MenuItem>\r\n                    )\r\n                  },\r\n                )\r\n              : null}\r\n          </Select>\r\n        </Grid>\r\n        <Grid item xs={4}>\r\n          <Button\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              let requestOptions = {\r\n                method: 'POST',\r\n                headers: { 'Content-Type': 'application/json' },\r\n                body: JSON.stringify({\r\n                  DriverID: selectedDriver,\r\n                  SponsorID: props.SponsorID,\r\n                  AppComments: 'CREATED BY ADMIN',\r\n                  AppDecisionReason: 'ACCEPTED BY ADMIN',\r\n                }),\r\n              }\r\n              fetch(apis.CreateNewSponsorship, requestOptions).then(() => {\r\n                props.updatePage.setPageUpdate(props.updatePage.updateCount + 1)\r\n              })\r\n            }}\r\n          >\r\n            Register driver\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}></Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default CreateNewSponsorshipCard\r\n","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\SponsorInvoicePage.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\InvoicePages\\SponsorInvoiceView.js",["262","263"],"import { Grid, Paper, Typography } from '@material-ui/core'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport apis from '../../Helpers/api_endpoints'\r\nimport { UserContext } from '../../Helpers/UserContext'\r\nimport GenericTable from '../GenericTable'\r\nrequire('datejs')\r\n\r\nconst SponsorInvoiceView = (props) => {\r\n  let sponsorData = useContext(UserContext).user\r\n\r\n  if (props.SponsorID) {\r\n    sponsorData = { Username: props.SponsorID }\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [pageUpdate, setPageUpdate] = useState(0)\r\n  function fullPageUpdateState() {\r\n    setPageUpdate(pageUpdate + 1)\r\n  }\r\n\r\n  const [driverOrders, setDriverOrders] = useState([])\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      // start loading animation\r\n      setIsLoading(true)\r\n      //   TODO: get all the orders for the sponsor\r\n\r\n      let requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          SponsorID: sponsorData.Username,\r\n        }),\r\n      }\r\n      let sponsor_orders_response = await fetch(apis.GetOrder, requestOptions)\r\n      let sponsor_orders_json = await sponsor_orders_response.json()\r\n      let sponsor_orders = JSON.parse(sponsor_orders_json.body).Items\r\n      let sponsor_orders_parsed = sponsor_orders.map((element) => {\r\n        return {\r\n          OrderID: element.OrderID.S,\r\n          SponsorID: element.SponsorID.S,\r\n          DriverID: element.DriverID.S,\r\n          Cost: parseFloat(element.Cost.N),\r\n          InvoicePeriod: Date.parse(\r\n            element.OrderSubmitted.S.replace(' ', 'T').split('.')[0],\r\n          )\r\n            .addMonths(1)\r\n            .moveToFirstDayOfMonth()\r\n            .toDateString(),\r\n          Status: parseInt(element.Status.N),\r\n        }\r\n      })\r\n\r\n      setDriverOrders(sponsor_orders_parsed)\r\n    })().then(() => {\r\n      setIsLoading(false)\r\n    })\r\n  }, [sponsorData.Username])\r\n\r\n  let monthly_invoices =\r\n    driverOrders.length > 0\r\n      ? driverOrders.reduce((prev, curr) => {\r\n          let invoice_period = curr.InvoicePeriod\r\n          let cost = curr.Cost\r\n\r\n          if (prev[invoice_period]) {\r\n            prev[invoice_period] += cost\r\n          } else {\r\n            prev[invoice_period] = cost\r\n          }\r\n\r\n          return prev\r\n        }, {})\r\n      : []\r\n\r\n  let this_month_invoice_due_date = Date.today()\r\n    .addMonths(1)\r\n    .moveToFirstDayOfMonth()\r\n    .toDateString()\r\n    .split(' ')\r\n    .slice(1, 3)\r\n    .join(' ')\r\n\r\n  let this_month_invoice_total =\r\n    driverOrders.length > 0 && monthly_invoices\r\n      ? monthly_invoices[\r\n          Date.today().moveToFirstDayOfMonth().addMonths(1).toDateString()\r\n        ].toFixed(2)\r\n      : 0.0\r\n\r\n  let monthly_invoice_table_data = []\r\n  if (monthly_invoices) {\r\n    for (const [key, value] of Object.entries(monthly_invoices)) {\r\n      monthly_invoice_table_data.push({\r\n        InvoicePeriodDate: Date.parse(key),\r\n        Cost: value,\r\n      })\r\n    }\r\n  }\r\n\r\n  let monthly_invoice_head_cells = [\r\n    {\r\n      id: 'InvoicePeriodDate',\r\n      label: 'Date due',\r\n      isDate: true,\r\n      width: 50,\r\n    },\r\n    {\r\n      id: 'Cost',\r\n      label: 'Invoice total (USD)',\r\n      isDate: false,\r\n      width: 50,\r\n    },\r\n  ]\r\n\r\n  if (props.SponsorID) {\r\n    return (\r\n      <Grid item xs={10} xl={6} container>\r\n        <Grid item xs={12}></Grid>\r\n        <Grid xs={12} item container component={Paper} style={{ padding: 20 }}>\r\n          <Grid item xs={12} align=\"center\">\r\n            <Typography variant=\"h6\">\r\n              Total due on {this_month_invoice_due_date}: $\r\n              {this_month_invoice_total}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <br />\r\n        </Grid>\r\n\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          container\r\n          component={Paper}\r\n          justify=\"center\"\r\n          style={{ padding: 20 }}\r\n        >\r\n          <Grid\r\n            item\r\n            xs={12}\r\n            container\r\n            justify=\"space-between\"\r\n            alignItems=\"center\"\r\n          >\r\n            <Grid item>\r\n              <Typography variant=\"h6\">Invoices by month (sponsor)</Typography>\r\n            </Grid>\r\n          </Grid>\r\n\r\n          <Grid item xs={12}>\r\n            <br></br>\r\n          </Grid>\r\n\r\n          <Grid item xs={12} component={Paper}>\r\n            <GenericTable\r\n              headCells={monthly_invoice_head_cells}\r\n              data={monthly_invoice_table_data}\r\n              tableKey=\"InvoicePeriodDate\"\r\n              showKey={false}\r\n              initialSortedColumn=\"InvoicePeriodDate\"\r\n              initialSortedDirection=\"desc\"\r\n              // selectedRow={selectedUser}\r\n              // setSelectedRow={setSelectedUserState}\r\n              // dialogIsOpen={userDialogIsOpen}\r\n              // setDialogIsOpenState={setUserDialogIsOpenState}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    )\r\n  } else {\r\n    return null\r\n  }\r\n}\r\n\r\nexport default SponsorInvoiceView\r\n","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\InvoicePages\\OrganizationInvoiceView.js",["264","265"],"import { Grid, Paper, Typography } from '@material-ui/core'\r\nimport React, { useContext, useEffect, useState } from 'react'\r\nimport apis from '../../Helpers/api_endpoints'\r\nimport { UserContext } from '../../Helpers/UserContext'\r\nimport GenericTable from '../GenericTable'\r\nrequire('datejs')\r\n\r\nconst OrganizationInvoiceView = (props) => {\r\n  let sponsorData = useContext(UserContext).user\r\n\r\n  if (props.Organization) {\r\n    sponsorData = { Organization: props.Organization }\r\n  }\r\n\r\n  const [isLoading, setIsLoading] = useState(true)\r\n  const [pageUpdate, setPageUpdate] = useState(0)\r\n  function fullPageUpdateState() {\r\n    setPageUpdate(pageUpdate + 1)\r\n  }\r\n\r\n  const [driverOrders, setDriverOrders] = useState([])\r\n\r\n  useEffect(() => {\r\n    ;(async () => {\r\n      // start loading animation\r\n      setIsLoading(true)\r\n      //   TODO: get all the orders for the sponsor\r\n\r\n      let requestOptions = {\r\n        method: 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify({\r\n          Organization: sponsorData.Organization,\r\n        }),\r\n      }\r\n      let sponsor_orders_response = await fetch(apis.GetOrder, requestOptions)\r\n      let sponsor_orders_json = await sponsor_orders_response.json()\r\n      let sponsor_orders = JSON.parse(sponsor_orders_json.body).Items\r\n      let sponsor_orders_parsed = sponsor_orders.map((element) => {\r\n        return {\r\n          OrderID: element.OrderID.S,\r\n          SponsorID: element.SponsorID.S,\r\n          DriverID: element.DriverID.S,\r\n          Cost: parseFloat(element.Cost.N),\r\n          InvoicePeriod: Date.parse(\r\n            element.OrderSubmitted.S.replace(' ', 'T').split('.')[0],\r\n          )\r\n            .addMonths(1)\r\n            .moveToFirstDayOfMonth()\r\n            .toDateString(),\r\n          Status: parseInt(element.Status.N),\r\n        }\r\n      })\r\n\r\n      setDriverOrders(sponsor_orders_parsed)\r\n    })().then(() => {\r\n      setIsLoading(false)\r\n    })\r\n  }, [sponsorData.Organization])\r\n\r\n  let monthly_invoices =\r\n    driverOrders.length > 0\r\n      ? driverOrders.reduce((prev, curr) => {\r\n          let invoice_period = curr.InvoicePeriod\r\n          let cost = curr.Cost\r\n\r\n          if (prev[invoice_period]) {\r\n            prev[invoice_period] += cost\r\n          } else {\r\n            prev[invoice_period] = cost\r\n          }\r\n\r\n          return prev\r\n        }, {})\r\n      : []\r\n\r\n  let this_month_invoice_due_date = Date.today()\r\n    .addMonths(1)\r\n    .moveToFirstDayOfMonth()\r\n    .toDateString()\r\n    .split(' ')\r\n    .slice(1, 3)\r\n    .join(' ')\r\n\r\n  let this_month_invoice_total =\r\n    driverOrders.length > 0 && monthly_invoices\r\n      ? monthly_invoices[\r\n          Date.today().moveToFirstDayOfMonth().addMonths(1).toDateString()\r\n        ].toFixed(2)\r\n      : 0.0\r\n\r\n  let monthly_invoice_table_data = []\r\n  if (monthly_invoices) {\r\n    for (const [key, value] of Object.entries(monthly_invoices)) {\r\n      monthly_invoice_table_data.push({\r\n        InvoicePeriodDate: Date.parse(key),\r\n\r\n        Cost: parseFloat(value.toFixed(2)),\r\n      })\r\n    }\r\n  }\r\n\r\n  let monthly_invoice_head_cells = [\r\n    {\r\n      id: 'InvoicePeriodDate',\r\n      label: 'Date due',\r\n      isDate: true,\r\n      width: 50,\r\n    },\r\n    {\r\n      id: 'Cost',\r\n      label: 'Invoice total (USD)',\r\n      isDate: false,\r\n      width: 50,\r\n    },\r\n  ]\r\n\r\n  return (\r\n    <Grid item xs={10} xl={6} container>\r\n      <Grid item xs={12}></Grid>\r\n\r\n      <Grid item xs={12} container justify=\"space-between\" alignItems=\"center\">\r\n        <Grid item>\r\n          <Typography variant=\"h5\">\r\n            Organization invoices: {sponsorData.Organization}\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <br />\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid xs={12} item container component={Paper} style={{ padding: 20 }}>\r\n        <Grid item xs={12} align=\"center\">\r\n          <Typography variant=\"h6\">\r\n            Total due on {this_month_invoice_due_date}: $\r\n            {this_month_invoice_total}\r\n          </Typography>\r\n        </Grid>\r\n      </Grid>\r\n\r\n      <Grid item xs={12}>\r\n        <br />\r\n      </Grid>\r\n\r\n      <Grid\r\n        item\r\n        xs={12}\r\n        container\r\n        component={Paper}\r\n        justify=\"center\"\r\n        style={{ padding: 20 }}\r\n      >\r\n        <Grid\r\n          item\r\n          xs={12}\r\n          container\r\n          justify=\"space-between\"\r\n          alignItems=\"center\"\r\n        >\r\n          <Grid item>\r\n            <Typography variant=\"h6\">\r\n              Invoices by month (organization)\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid item xs={12}>\r\n          <br></br>\r\n        </Grid>\r\n\r\n        <Grid item xs={12} component={Paper}>\r\n          <GenericTable\r\n            headCells={monthly_invoice_head_cells}\r\n            data={monthly_invoice_table_data}\r\n            tableKey=\"InvoicePeriodDate\"\r\n            showKey={false}\r\n            initialSortedColumn=\"InvoicePeriodDate\"\r\n            initialSortedDirection=\"desc\"\r\n            // selectedRow={selectedUser}\r\n            // setSelectedRow={setSelectedUserState}\r\n            // dialogIsOpen={userDialogIsOpen}\r\n            // setDialogIsOpenState={setUserDialogIsOpenState}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  )\r\n}\r\n\r\nexport default OrganizationInvoiceView\r\n","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Helpers\\api_endpoints.js",[],"C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\Components\\InvoicePages\\OrganizationInvoiceContent.js",["266","267"],"import { Divider, Grid, MenuItem, Select, Typography } from '@material-ui/core'\nimport React, { useEffect, useState } from 'react'\nimport OrganizationInvoiceView from './OrganizationInvoiceView'\nimport SponsorInvoiceView from './SponsorInvoiceView'\nimport _ from 'lodash'\nimport apis from '../../Helpers/api_endpoints'\n\nconst OrganizationInvoiceContent = (props) => {\n  const [isLoading, setIsLoading] = useState(null)\n  const [orgSponsors, setOrgSponsors] = useState(null)\n  const [selectedSponsor, setSelectedSponsor] = useState(\n    props.SponsorID ? props.SponsorID : null,\n  )\n\n  useEffect(() => {\n    ;(async () => {\n      setSelectedSponsor(props.SponsorID)\n      // start loading animation\n      setIsLoading(true)\n\n      let org_sponsors_raw = await fetch(\n        apis.GetOrgSponsors + props.Organization.replace(' ', '%20'),\n      )\n      let org_sponsors_json = await org_sponsors_raw.json()\n      let org_sponsors_parsed = JSON.parse(org_sponsors_json.body.toString())\n      let org_sponsors_formatted = org_sponsors_parsed.Items.filter(\n        (element) => parseInt(element.AccountStatus.N) < 2,\n      ).map((element) => {\n        return {\n          Username: element.Username.S,\n          Name: element.FirstName.S + ' ' + element.LastName.S,\n        }\n      })\n\n      setOrgSponsors(org_sponsors_formatted)\n    })().then(() => {\n      setIsLoading(false)\n    })\n  }, [props.Organization])\n\n  return (\n    <Grid item container>\n      <OrganizationInvoiceView Organization={props.Organization} />\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item xs={10}>\n        <Divider />\n      </Grid>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      <Grid item container justify=\"flex-start\" spacing={2} alignItems=\"center\">\n        <Grid item>\n          <Typography variant=\"h5\">Sponsor invoices:</Typography>\n        </Grid>\n        <Grid item container xs={4} xl={2}>\n          <Grid item xs={12}>\n            <Select\n              fullWidth\n              labelId=\"SponsorLabel\"\n              id=\"Sponsor\"\n              variant=\"filled\"\n              value={selectedSponsor}\n              onChange={(event) => {\n                // update sponsor\n                setSelectedSponsor(event.target.value)\n              }}\n            >\n              {_.sortBy(orgSponsors, ['Organization', 'Name'], ['asc']).map(\n                (sponsor) => (\n                  <MenuItem value={sponsor.Username}>\n                    {' '}\n                    {sponsor.Username + ': ' + sponsor.Name}\n                  </MenuItem>\n                ),\n              )}\n            </Select>\n          </Grid>\n        </Grid>\n      </Grid>\n\n      <Grid item xs={12}>\n        <br />\n      </Grid>\n      {/* TODO: feed input from a dropdown */}\n      <SponsorInvoiceView SponsorID={selectedSponsor} />\n    </Grid>\n  )\n}\n\nexport default OrganizationInvoiceContent\n","C:\\Users\\jeffr\\Downloads\\4910\\Master\\src\\pages\\AdminInvoicePage.js",[],{"ruleId":"268","replacedBy":"269"},{"ruleId":"270","replacedBy":"271"},{"ruleId":"272","severity":1,"message":"273","line":15,"column":10,"nodeType":"274","messageId":"275","endLine":15,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":15,"column":10,"nodeType":"274","messageId":"275","endLine":15,"endColumn":19},{"ruleId":"272","severity":1,"message":"276","line":17,"column":12,"nodeType":"274","messageId":"275","endLine":17,"endColumn":31},{"ruleId":"272","severity":1,"message":"273","line":15,"column":10,"nodeType":"274","messageId":"275","endLine":15,"endColumn":19},{"ruleId":"272","severity":1,"message":"276","line":17,"column":12,"nodeType":"274","messageId":"275","endLine":17,"endColumn":31},{"ruleId":"272","severity":1,"message":"273","line":9,"column":10,"nodeType":"274","messageId":"275","endLine":9,"endColumn":19},{"ruleId":"277","severity":1,"message":"278","line":39,"column":6,"nodeType":"279","endLine":39,"endColumn":26,"suggestions":"280"},"no-native-reassign",["281"],"no-negated-in-lhs",["282"],"no-unused-vars","'isLoading' is assigned a value but never used.","Identifier","unusedVar","'fullPageUpdateState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'props.SponsorID'. Either include it or remove the dependency array. If 'setSelectedSponsor' needs the current value of 'props.SponsorID', you can also switch to useReducer instead of useState and read 'props.SponsorID' in the reducer.","ArrayExpression",["283"],"no-global-assign","no-unsafe-negation",{"desc":"284","fix":"285"},"Update the dependencies array to be: [props.Organization, props.SponsorID]",{"range":"286","text":"287"},[1384,1404],"[props.Organization, props.SponsorID]"]